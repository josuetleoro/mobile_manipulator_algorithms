<launch>
    <!--mars robot model-->
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find mars_description)/urdf/mars_robot.urdf.xacro"/>

    <!-- ur5 robot model -->
    <param name="robot_description_ur5" command="$(find xacro)/xacro --inorder '$(find mars_description)/urdf/ur5_robot.urdf.xacro'" />

    <!--mars description semantic-->
    <param name="robot_description_semantic" textfile="$(find mars_sim)/config/mars.srdf"/>    

     <!-- load the ur5.srdf file used by the ur5 joint limiter node -->
    <param name="robot_description_ur5_semantic" textfile="$(find mars_sim)/config/ur5.srdf"/>   

    <!--run rviz with its configuration file-->
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find mars_sim)/rviz/rviz_config.rviz" required="true"/>    

    <!--joint state publisher-->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"> 
        <param name="use_gui" value="false"/>
        <param name="rate" value="20"/>
        <rosparam param="source_list">["mars_joint_states"]</rosparam>
        <rosparam file="$(find mars_description)/config/mars_start_pos.yaml"/>        
    </node>

    <!--robot state publisher-->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher">
        <param name="publish_frequency" value="100"/>
    </node>    

    <!--transformation from base_footprint to base_link (z translation = wheel radius)-->
    <node pkg="tf" type="static_transform_publisher" name="base_footprint_to_base_link" args="0 0 0.0762 0 0 0 1 base_footprint base_link 1.0"/>
    
    <!--node pkg="mars_sim" type="ur_pos" name="ur_pos_node"/-->
    <!--node pkg="mars_sim" type="reset_state" name="reset_state"/-->

</launch>